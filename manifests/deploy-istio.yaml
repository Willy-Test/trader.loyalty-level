apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/status: injected-version-root@cc5c34bbd1ee-0.4.0-24089ea97c8d244493c93b499a666ddf4010b547
  creationTimestamp: null
  name: loyalty-level
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/status: injected-version-root@cc5c34bbd1ee-0.4.0-24089ea97c8d244493c93b499a666ddf4010b547
      creationTimestamp: null
      labels:
        app: loyalty-level
        solution: stock-trader
        version: v1
    spec:
      containers:
      - env:
        - name: MQ_ID
          valueFrom:
            secretKeyRef:
              key: id
              name: mq
        - name: MQ_PASSWORD
          valueFrom:
            secretKeyRef:
              key: pwd
              name: mq
        - name: MQ_HOST
          valueFrom:
            secretKeyRef:
              key: host
              name: mq
        - name: MQ_PORT
          valueFrom:
            secretKeyRef:
              key: port
              name: mq
        - name: MQ_CHANNEL
          valueFrom:
            secretKeyRef:
              key: channel
              name: mq
        - name: MQ_QUEUE_MANAGER
          valueFrom:
            secretKeyRef:
              key: queue-manager
              name: mq
        - name: MQ_QUEUE
          valueFrom:
            secretKeyRef:
              key: queue
              name: mq
        image: loyalty-level:latest
        imagePullPolicy: Always
        name: loyalty-level
        ports:
        - containerPort: 9080
        resources: {}
      - args:
        - proxy
        - sidecar
        - -v
        - "2"
        - --configPath
        - /etc/istio/proxy
        - --binaryPath
        - /usr/local/bin/envoy
        - --serviceCluster
        - loyalty-level
        - --drainDuration
        - 45s
        - --parentShutdownDuration
        - 1m0s
        - --discoveryAddress
        - istio-pilot.istio-system:15003
        - --discoveryRefreshDelay
        - 1s
        - --zipkinAddress
        - zipkin.istio-system:9411
        - --connectTimeout
        - 10s
        - --statsdUdpAddress
        - istio-mixer.istio-system:9125
        - --proxyAdminPort
        - "15000"
        - --controlPlaneAuthPolicy
        - NONE
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: docker.io/istio/proxy_debug:0.4.0
        imagePullPolicy: IfNotPresent
        name: istio-proxy
        resources: {}
        securityContext:
          privileged: true
          readOnlyRootFilesystem: false
          runAsUser: 1337
        volumeMounts:
        - mountPath: /etc/istio/proxy
          name: istio-envoy
        - mountPath: /etc/certs/
          name: istio-certs
          readOnly: true
      initContainers:
      - args:
        - -p
        - "15001"
        - -u
        - "1337"
        image: docker.io/istio/proxy_init:0.4.0
        imagePullPolicy: IfNotPresent
        name: istio-init
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: true
      - args:
        - -c
        - sysctl -w kernel.core_pattern=/etc/istio/proxy/core.%e.%p.%t && ulimit -c
          unlimited
        command:
        - /bin/sh
        image: alpine
        imagePullPolicy: IfNotPresent
        name: enable-core-dump
        resources: {}
        securityContext:
          privileged: true
      volumes:
      - emptyDir:
          medium: Memory
          sizeLimit: "0"
        name: istio-envoy
      - name: istio-certs
        secret:
          optional: true
          secretName: istio.default
status: {}
---
#Deploy the service
apiVersion: v1
kind: Service
metadata:
  name: loyalty-level-service
  labels:
    app: loyalty-level
spec:
  type: NodePort
  ports:
    - port: 9080
      name: http
#     nodePort: 31003
  selector:
    app: loyalty-level
---
#Configure the ingress 
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: loyalty-level-ingress
# annotations:
#   kubernetes.io/ingress.class: istio
spec:
  rules:
  - http:
      paths:
      - path: /loyalty-level
        backend:
          serviceName: loyalty-level-service
          servicePort: 9080
---
